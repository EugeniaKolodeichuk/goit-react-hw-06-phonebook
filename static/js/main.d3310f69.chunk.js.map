{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/actions.js","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/reducer.js","redux/store.js","index.js","components/Form/Form.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","onAddContact","createAction","name","number","payload","id","uuidv4","onDeleteContact","onChangeFilter","connect","dispatch","actions","prodIdName","prodIdNumber","useState","setName","setNumber","handleChange","e","target","value","resetForm","className","styles","form","onSubmit","obj","preventDefault","label","htmlFor","input","type","pattern","title","required","onChange","button","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","contacts","items","section","list","map","item","onClick","state","event","App","createReducer","action","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d3310f69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2hXLv\",\"label\":\"Filter_label__1X4tl\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n/*Redux Toolkit*/\r\n\r\nconst onAddContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\n\r\nconst onDeleteContact = createAction('contacts/delete');\r\n\r\nconst onChangeFilter = createAction('contacts/changeFilter');\r\n\r\n/*Redux*/\r\n/* import types from './types'; */\r\n\r\n/* const onAddContact = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}); */\r\n\r\n/* const onDeleteContact = id => ({\r\n  type: types.DELETE,\r\n  payload: id,\r\n}); */\r\n\r\n/* const onChangeFilter = contacts => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: contacts,\r\n}); */\r\n\r\n// eslint-disable-next-line\r\nexport default { onAddContact, onDeleteContact, onChangeFilter };\r\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from '../Form/Form.module.css';\nimport actions from '../../redux/contacts/actions';\n\nfunction Form({ onAddContact }) {\n  const prodIdName = uuidv4();\n  const prodIdNumber = uuidv4();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = (obj, e) => {\n    e.preventDefault();\n\n    /*Before Redux*/\n    /* const contacts = {\n      name,\n      number,\n      id: uuidv4(),\n    };*/\n\n    onAddContact(name, number);\n    resetForm();\n  };\n\n  //очистка формы\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label} htmlFor={prodIdName}>\n        Name\n      </label>\n      <input\n        className={styles.input}\n        id={prodIdName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <br />\n      <label className={styles.label} htmlFor={prodIdNumber}>\n        Number\n      </label>\n      <input\n        className={styles.input}\n        id={prodIdNumber}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  number: PropTypes.number,\n  name: PropTypes.string,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddContact: (name, number) =>\n      dispatch(actions.onAddContact(name, number)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../ContactList/ContactList.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/actions';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <div className={styles.section}>\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          <p className={styles.name}> {name}:</p>\n          <p className={styles.number}>{number}</p>\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.any.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.onDeleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../Filter/Filter.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/actions';\n\nconst Filter = ({ contacts, onChange }) => (\n  <div>\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={contacts}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  contacts: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(actions.onChangeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","/* import React, { useState, useEffect } from 'react'; */\nimport Form from './components/Form/Form';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n  //before Redux\n\n  /* const allContacts = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]; */\n\n  /*  const useLocalStorage = allContacts => {\n    const [contacts, setContacts] = useState(\n      () => JSON.parse(window.localStorage.getItem('contacts')) ?? allContacts,\n    );\n    useEffect(() => {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts]);\n    return [contacts, setContacts];\n  }; */\n\n  /* const [contacts, setContacts] = useLocalStorage(allContacts);\n  const [filter, setFilter] = useState(''); */\n\n  /* const onAddContact = obj => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === obj.name.toLowerCase(),\n      )\n    ) {\n      alert(`${obj.name} is already in contacts`);\n    } else setContacts(prevState => [obj, ...prevState]);\n  }; */\n\n  /* const onDeleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  }; */\n\n  /* const onChangeFilter = e => {\n    setFilter(e.currentTarget.value);\n  }; */\n\n  /* const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }; */\n\n  return (\n    <section>\n      <h2>Phonebook</h2>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </section>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\n/*Redux Toolkit*/\r\n/* console.log(actions); */\r\n\r\nconst items = createReducer(\r\n  [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  {\r\n    [actions.onAddContact]: (state, action) => [action.payload, ...state],\r\n    [actions.onDeleteContact]: (state, action) =>\r\n      state.filter(contact => contact.id !== action.payload),\r\n  },\r\n);\r\n\r\nconst filter = createReducer('', {\r\n  [actions.onChangeFilter]: (_, action) => action.payload,\r\n});\r\n\r\n/*Redux*/\r\n/* import types from './types'; */\r\n\r\n/* const items = (\r\n  state = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  { type, payload },\r\n) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [payload, ...state];\r\n\r\n    case types.DELETE:\r\n      return state.filter(contact => contact.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}; */\r\n\r\n/* const filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}; */\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/reducer';\r\n\r\n/*Redux Toolkit*/\r\n/* console.log(process.env); */\r\n/* console.log(getDefaultMiddleware()); */\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n/*Redux*/\r\n/* import { createStore, combineReducers } from 'redux'; */\r\n/* import { composeWithDevTools } from 'redux-devtools-extension'; */\r\n\r\n/* const rootReducer = combineReducers({ contacts: contactsReducer }); */\r\n/* const store = createStore(rootReducer, composeWithDevTools()); */\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\n/* console.log(store);\nconsole.log(store.getState()); */\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={'loading...'} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__l37S3\",\"input\":\"Form_input__nYIdp\",\"label\":\"Form_label__Z9AOh\",\"button\":\"Form_button__3ycrr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__29B_M\",\"item\":\"ContactList_item__1oDnJ\",\"name\":\"ContactList_name__3q5dy\",\"number\":\"ContactList_number__3HfFa\",\"button\":\"ContactList_button__23R71\"};"],"sourceRoot":""}