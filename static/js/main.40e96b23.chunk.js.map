{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/types.js","redux/contacts/actions.js","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/reducer.js","redux/store.js","index.js","components/Form/Form.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","name","number","type","types","payload","id","uuidv4","contacts","connect","dispatch","onAddContact","actions","prodIdName","prodIdNumber","useState","setName","setNumber","handleChange","e","target","value","resetForm","className","styles","form","onSubmit","preventDefault","label","htmlFor","input","pattern","title","required","onChange","button","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","items","onDeleteContact","section","list","map","item","onClick","state","event","App","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,+ICAzC,EACR,eADQ,EAEL,kBAFK,EAGE,wBCmBF,EApBM,SAACC,EAAMC,GAAP,MAAmB,CACtCC,KAAMC,EACNC,QAAS,CACPJ,OACAC,SACAI,GAAIC,iBAeO,EAXS,SAAAD,GAAE,MAAK,CAC7BH,KAAMC,EACNC,QAASC,IASI,EANQ,SAAAE,GAAQ,MAAK,CAClCL,KAAMC,EACNC,QAASG,I,OCqEX,IAOeC,cAAQ,MAPI,SAAAC,GACzB,MAAO,CACLC,aAAc,SAACV,EAAMC,GAAP,OACZQ,EAASE,EAAqBX,EAAMC,QAI3BO,EAxFf,YAAiC,IAAjBE,EAAgB,EAAhBA,aACRE,EAAaN,cACbO,EAAeP,cAErB,EAAwBQ,mBAAS,IAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOb,EAAP,KAAee,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBnB,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,MACd,OAAQpB,GACN,IAAK,OACHe,EAAQK,GACR,MACF,IAAK,SACHJ,EAAUI,KAkBVC,EAAY,WAChBN,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMM,UAAWC,IAAOC,KAAMC,SAlBX,SAAAP,GACnBA,EAAEQ,iBAMFhB,EAAaV,EAAMC,GACnBoB,KAUA,UACE,uBAAOC,UAAWC,IAAOI,MAAOC,QAAShB,EAAzC,kBAGA,uBACEU,UAAWC,IAAOM,MAClBxB,GAAIO,EACJV,KAAK,OACLF,KAAK,OACLoB,MAAOpB,EACP8B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUhB,IAEZ,uBACA,uBAAOK,UAAWC,IAAOI,MAAOC,QAASf,EAAzC,oBAGA,uBACES,UAAWC,IAAOM,MAClBxB,GAAIQ,EACJX,KAAK,MACLF,KAAK,SACLoB,MAAOnB,EACP6B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUhB,IAEZ,wBAAQK,UAAWC,IAAOW,OAAQhC,KAAK,SAAvC,+B,gBCvCAiC,EAAqB,SAACC,EAAaC,GACvC,IAAMC,EAAmBD,EAAOE,cAEhC,OAAOH,EAAYC,QAAO,SAAAG,GAAO,OAC/BA,EAAQxC,KAAKuC,cAAcE,SAASH,OAYzB9B,eARS,SAAC,GAAD,QAAGD,SAAYmC,EAAf,EAAeA,MAAOL,EAAtB,EAAsBA,OAAtB,MAAsC,CAC5D9B,SAAU4B,EAAmBO,EAAOL,OAGX,SAAA5B,GAAQ,MAAK,CACtCkC,gBAAiB,SAAAtC,GAAE,OAAII,EAASE,EAAwBN,QAG3CG,EA9CK,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAUoC,EAAb,EAAaA,gBAAb,OAClB,qBAAKrB,UAAWC,IAAOqB,QAAvB,SACE,oBAAItB,UAAWC,IAAOsB,KAAtB,SACGtC,EAASuC,KAAI,gBAAGzC,EAAH,EAAGA,GAAIL,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIqB,UAAWC,IAAOwB,KAAtB,UACE,oBAAGzB,UAAWC,IAAOvB,KAArB,cAA6BA,EAA7B,OACA,mBAAGsB,UAAWC,IAAOtB,OAArB,SAA8BA,IAC9B,wBACEqB,UAAWC,IAAOW,OAClBhC,KAAK,SACL8C,QAAS,kBAAML,EAAgBtC,IAHjC,sBAH+BA,a,iBCuB1BG,eARS,SAAAyC,GAAK,MAAK,CAChC1C,SAAU0C,EAAM1C,SAAS8B,WAGA,SAAA5B,GAAQ,MAAK,CACtCwB,SAAU,SAAAiB,GAAK,OAAIzC,EAASE,EAAuBuC,EAAM/B,OAAOC,YAGnDZ,EA3BA,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAU0B,EAAb,EAAaA,SAAb,OACb,8BACE,wBAAOX,UAAWC,IAAOI,MAAzB,kCAEE,uBACEL,UAAWC,IAAOM,MAClB3B,KAAK,OACLkB,MAAOb,EACP0B,SAAUA,YCkDHkB,MA3Df,WAgDE,OACE,oCACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,uBCzBSC,4BAAgB,CAAEV,MA/BnB,WAQR,IAPJO,EAOG,uDAPK,CACN,CAAE5C,GAAI,OAAQL,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEI,GAAI,OAAQL,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEI,GAAI,OAAQL,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEI,GAAI,OAAQL,KAAM,iBAAkBC,OAAQ,cAG7C,yCADDC,EACC,EADDA,KAAME,EACL,EADKA,QAER,OAAQF,GACN,KAAKC,EACH,MAAM,CAAEC,GAAR,mBAAoB6C,IAEtB,KAAK9C,EACH,OAAO8C,EAAMZ,QAAO,SAAAG,GAAO,OAAIA,EAAQnC,KAAOD,KAEhD,QACE,OAAO6C,IAc2BZ,OAVzB,WAAoC,IAAnCY,EAAkC,uDAA1B,GAA0B,yCAApB/C,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QAClC,OAAQF,IACDC,EACIC,EAGA6C,KC1BPI,EAAcD,0BAAgB,CAAE7C,SAAU+C,IAIjCC,EAFDC,sBAAYH,EAAaI,iCCIvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,U,kBCf1BhE,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,uB,kBCA7GD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,4BAA4B,OAAS,+B","file":"static/js/main.40e96b23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2hXLv\",\"label\":\"Filter_label__1X4tl\"};","// eslint-disable-next-line\r\nexport default {\r\n  ADD: 'contacts/add',\r\n  DELETE: 'contacts/delete',\r\n  CHANGE_FILTER: 'contacts/changeFilter',\r\n};\r\n","import types from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst onAddContact = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n});\r\n\r\nconst onDeleteContact = id => ({\r\n  type: types.DELETE,\r\n  payload: id,\r\n});\r\n\r\nconst onChangeFilter = contacts => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: contacts,\r\n});\r\n\r\n// eslint-disable-next-line\r\nexport default { onAddContact, onDeleteContact, onChangeFilter };\r\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from '../Form/Form.module.css';\nimport actions from '../../redux/contacts/actions';\n\nfunction Form({ onAddContact }) {\n  const prodIdName = uuidv4();\n  const prodIdNumber = uuidv4();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    /* const contacts = {\n      name,\n      number,\n      id: uuidv4(),\n    };*/\n    onAddContact(name, number);\n    resetForm();\n  };\n\n  //очистка формы\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label} htmlFor={prodIdName}>\n        Name\n      </label>\n      <input\n        className={styles.input}\n        id={prodIdName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <br />\n      <label className={styles.label} htmlFor={prodIdNumber}>\n        Number\n      </label>\n      <input\n        className={styles.input}\n        id={prodIdNumber}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  number: PropTypes.number,\n  name: PropTypes.string,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddContact: (name, number) =>\n      dispatch(actions.onAddContact(name, number)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../ContactList/ContactList.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/actions';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <div className={styles.section}>\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          <p className={styles.name}> {name}:</p>\n          <p className={styles.number}>{number}</p>\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.any.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.onDeleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../Filter/Filter.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/actions';\n\nconst Filter = ({ contacts, onChange }) => (\n  <div>\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={contacts}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  contacts: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(actions.onChangeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","/* import React, { useState, useEffect } from 'react'; */\nimport Form from './components/Form/Form';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n  //before Redux\n\n  /* const allContacts = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]; */\n\n  /*  const useLocalStorage = allContacts => {\n    const [contacts, setContacts] = useState(\n      () => JSON.parse(window.localStorage.getItem('contacts')) ?? allContacts,\n    );\n    useEffect(() => {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts]);\n    return [contacts, setContacts];\n  }; */\n\n  /* const [contacts, setContacts] = useLocalStorage(allContacts);\n  const [filter, setFilter] = useState(''); */\n\n  /* const onAddContact = obj => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === obj.name.toLowerCase(),\n      )\n    ) {\n      alert(`${obj.name} is already in contacts`);\n    } else setContacts(prevState => [obj, ...prevState]);\n  }; */\n\n  /* const onDeleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  }; */\n\n  /* const onChangeFilter = e => {\n    setFilter(e.currentTarget.value);\n  }; */\n\n  /* const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }; */\n\n  return (\n    <section>\n      <h2>Phonebook</h2>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </section>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport types from './types';\r\n\r\nconst items = (\r\n  state = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  { type, payload },\r\n) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [payload, ...state];\r\n\r\n    case types.DELETE:\r\n      return state.filter(contact => contact.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts/reducer';\r\n\r\nconst rootReducer = combineReducers({ contacts: contactsReducer });\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\n/* console.log(store);\nconsole.log(store.getState()); */\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__l37S3\",\"input\":\"Form_input__nYIdp\",\"label\":\"Form_label__Z9AOh\",\"button\":\"Form_button__3ycrr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__29B_M\",\"item\":\"ContactList_item__1oDnJ\",\"name\":\"ContactList_name__3q5dy\",\"number\":\"ContactList_number__3HfFa\",\"button\":\"ContactList_button__23R71\"};"],"sourceRoot":""}