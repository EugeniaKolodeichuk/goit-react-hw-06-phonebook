{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/selectors.js","redux/contacts/actions.js","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/reducer.js","redux/store.js","index.js","components/Form/Form.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","onAddContact","createAction","number","payload","id","uuidv4","onDeleteContact","onChangeFilter","Form","prodIdName","prodIdNumber","useState","setName","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","resetForm","className","styles","form","onSubmit","preventDefault","find","alert","actions","label","htmlFor","input","type","pattern","title","required","onChange","button","ContactList","section","list","map","item","onClick","Filter","event","App","createReducer","action","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c82a5c8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2hXLv\",\"label\":\"Filter_label__1X4tl\"};","/*Redux*/\r\n/* export const getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n}; */\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n/*Redux Toolkit*/\r\n\r\nconst onAddContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\n\r\nconst onDeleteContact = createAction('contacts/delete');\r\n\r\nconst onChangeFilter = createAction('contacts/changeFilter');\r\n\r\n/*Redux*/\r\n/* import types from './types'; */\r\n\r\n/* const onAddContact = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}); */\r\n\r\n/* const onDeleteContact = id => ({\r\n  type: types.DELETE,\r\n  payload: id,\r\n}); */\r\n\r\n/* const onChangeFilter = contacts => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: contacts,\r\n}); */\r\n\r\n// eslint-disable-next-line\r\nexport default { onAddContact, onDeleteContact, onChangeFilter };\r\n","import { useState } from 'react';\nimport { /* connect, */ useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from '../Form/Form.module.css';\nimport actions from '../../redux/contacts/actions';\n\nexport default function Form(/* { onAddContact } */) {\n  const prodIdName = uuidv4();\n  const prodIdNumber = uuidv4();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    /*Before Redux*/\n    /* const contacts = {\n      name,\n      number,\n      id: uuidv4(),\n    };*/\n\n    /* console.log(contacts); */\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else dispatch(actions.onAddContact(name, number));\n\n    /* onAddContact(name, number); */\n    resetForm();\n  };\n\n  //очистка формы\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label} htmlFor={prodIdName}>\n        Name\n      </label>\n      <input\n        className={styles.input}\n        id={prodIdName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <br />\n      <label className={styles.label} htmlFor={prodIdNumber}>\n        Number\n      </label>\n      <input\n        className={styles.input}\n        id={prodIdNumber}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onAddContact: PropTypes.func,\n  number: PropTypes.number,\n  name: PropTypes.string,\n};\n\n/*Redux*/\n/* const mapDispatchToProps = dispatch => {\n  return {\n    onAddContact: (name, number) =>\n      dispatch(actions.onAddContact(name, number)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Form); */\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../ContactList/ContactList.module.css';\nimport { /* connect, */ useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/actions';\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\n\nconst ContactList = (/* {\n    contacts,\n    onDeleteContact\n  } */) => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(actions.onDeleteContact(id));\n\n  return (\n    <div className={styles.section}>\n      <ul className={styles.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li className={styles.item} key={id}>\n            <p className={styles.name}> {name}:</p>\n            <p className={styles.number}>{number}</p>\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.any.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\n/*Redux*/\n/* const mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n}); */\n\n/* const mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.onDeleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList); */\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../Filter/Filter.module.css';\nimport { /* connect, */ useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport actions from '../../redux/contacts/actions';\n\nconst Filter = (/* { contacts, onChange } */) => {\n  const contacts = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={contacts}\n          onChange={event =>\n            dispatch(actions.onChangeFilter(event.target.value))\n          }\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  contacts: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n\n/*Redux*/\n/* const mapStateToProps = state => ({\n  contacts: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(actions.onChangeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter); */\n","/* import React, { useState, useEffect } from 'react'; */\nimport Form from './components/Form/Form';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n  //before Redux\n\n  /* const allContacts = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]; */\n\n  /*  const useLocalStorage = allContacts => {\n    const [contacts, setContacts] = useState(\n      () => JSON.parse(window.localStorage.getItem('contacts')) ?? allContacts,\n    );\n    useEffect(() => {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts]);\n    return [contacts, setContacts];\n  }; */\n\n  /* const [contacts, setContacts] = useLocalStorage(allContacts);\n  const [filter, setFilter] = useState(''); */\n\n  /* const onAddContact = obj => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === obj.name.toLowerCase(),\n      )\n    ) {\n      alert(`${obj.name} is already in contacts`);\n    } else setContacts(prevState => [obj, ...prevState]);\n  }; */\n\n  /* const onDeleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  }; */\n\n  /* const onChangeFilter = e => {\n    setFilter(e.currentTarget.value);\n  }; */\n\n  /* const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }; */\n\n  return (\n    <section>\n      <h2>Phonebook</h2>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </section>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\n/*Redux Toolkit*/\r\n/* console.log(actions); */\r\n\r\nconst items = createReducer(\r\n  [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  {\r\n    [actions.onAddContact]: (state, action) => [action.payload, ...state],\r\n    [actions.onDeleteContact]: (state, action) =>\r\n      state.filter(contact => contact.id !== action.payload),\r\n  },\r\n);\r\n\r\nconst filter = createReducer('', {\r\n  [actions.onChangeFilter]: (_, action) => action.payload,\r\n});\r\n\r\n/*Redux*/\r\n/* import types from './types'; */\r\n\r\n/* const items = (\r\n  state = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  { type, payload },\r\n) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [payload, ...state];\r\n\r\n    case types.DELETE:\r\n      return state.filter(contact => contact.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}; */\r\n\r\n/* const filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}; */\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/reducer';\r\n\r\n/*Redux Toolkit*/\r\n/* console.log(process.env); */\r\n/* console.log(getDefaultMiddleware()); */\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n/*Redux*/\r\n/* import { createStore, combineReducers } from 'redux'; */\r\n/* import { composeWithDevTools } from 'redux-devtools-extension'; */\r\n\r\n/* const rootReducer = combineReducers({ contacts: contactsReducer }); */\r\n/* const store = createStore(rootReducer, composeWithDevTools()); */\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\n/* console.log(store);\nconsole.log(store.getState()); */\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={'loading...'} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__l37S3\",\"input\":\"Form_input__nYIdp\",\"label\":\"Form_label__Z9AOh\",\"button\":\"Form_button__3ycrr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__29B_M\",\"item\":\"ContactList_item__1oDnJ\",\"name\":\"ContactList_name__3q5dy\",\"number\":\"ContactList_number__3HfFa\",\"button\":\"ContactList_button__23R71\"};"],"sourceRoot":""}